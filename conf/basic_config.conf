function user_customization {
  # Default location of pifetch images
  image_dir="/home/$user/Pictures/pifetch_images"
  
  ####################
  # Neofetch Display #
  ####################
  
  # Include the info that you want to add. Most of these variables are decided in the variable_declaration function or in your ~/.bashrc file
  #
  # Options:
  #     OS    cpu     ram_num        ram            simplified_ram    resolution    DE      battery_percentage
  #     free_storage  used_storage   total_storage  free_storage   percent_storage  system_runtime
  
  info_stuff=(
    "$user_hostname" ""
    "" "$spacer" #Spacer is in the right area so that it becomes white instead of cyan
    "OS: "  "$OS"
    "CPU: " "$cpu"
    "Ram: " "$simplified_ram ($ram)"
    "DE: "  "$DE"
    "Terminal: "       "$TERMINAL"
    "Resolution: "     "$resolution"
    "Storage Space: "  "$(($used_storage / 1000000))/$(($total_storage / 1000000)) GB ($percent_storage)"
    "Usable Storage: " "$(($free_storage / 1000000)) GB"
    "Uptime: "         "$system_runtime"
    "Battery: "        "$battery_percentage"
    "Image: "          "$image_file"
  )
}

#####################
# Image restriction #
#####################
# Choose what images in your ~/Pictures/neofetch_images directory to not use (it won't try files that aren't images anyways)

naughty_images=(
  # E.G.: (will prevent ~/Pictures/pifetch_images/picture_of_your_mom.png from being selected)
  "picture_of_your_mom.png"
)

# Where to add font formatting, system information variables, and icons (if you want)
function variable_declaration {
  # Font customization
  Fontreset='\033[0m'
  Bold='\033[1m'
  
  Red='\033[0;31m'
  Lred='\033[0m\e[38;5;196m'
  export Lgreen='\033[0m\e[92m'
  Orange='\033[0m\e[38;5;208m'
  Yellow='\033[0m\e[38;5;226m'
  Lblue='\033[0m\e[34m'
  Purple='\033[0m\e[38;5;92m'
  Pink='\033[0m\e[38;5;198m'
  Cyan='\033[0m\e[36m'
  
  DefFont=$Cyan$Bold
  
  # Computer Information
  user_hostname=$(echo $DefFont$(whoami)$Fontreset@$DefFont$(hostnamectl hostname)$Fontreset)
  clean_user_hostname=$(echo -e "$(whoami)@$(hostnamectl hostname)")
  spacer=$(for i in $(seq 0 $((${#clean_user_hostname}-1))); do printf '%s' "-"; done)
  
  OS=$(grep -E "^PRETTY_NAME=" /etc/os-release | sed "s/PRETTY_NAME=//")
  cpu=$(lscpu | grep "Model name:" | sed -r 's/Model name:\s{1,}//g' | sed -r 's/ with Radeon Graphics//')
  ram=$(echo -e "$(cat /proc/meminfo | grep "MemTotal" | sed -r 's/MemTotal:       //')")
  ram_num=$(cat /proc/meminfo | grep "MemTotal" | sed -r 's/MemTotal:       //' | sed -r 's/ kB//')
  simplified_ram=$(echo ""$(($ram_num / 1000000))" GB")
  resolution=$(xrandr | sed 's/^.*current //' | sed 's/, maximum 32767 x 32767//' | head -n 1)
  storage_dev=$(df -h | sort -k 2 -r -h | head -1 | awk '{print $1}')
  used_storage=$(df / | grep -h 2 | awk '{print $3}')
  total_storage=$(df / | grep -h 2 | awk '{print $2}')
  free_storage=$(($total_storage - $used_storage))
  perc=$(echo "scale=3; $used_storage / $total_storage * 100" | bc) #temp var
  percent_storage=$(echo "${perc:0:4}%")
  DE=$(echo $XDG_CURRENT_DESKTOP | sed "s/^.*://")
  system_runtime=$(uptime -p | sed 's/up //')
  battery_percentage=$(echo $(upower -i $(upower -e | grep 'BAT') | grep percentage | sed 's/percentage://')) # The echo is to remove spaces
  
  # ICONS (You will need to have icons-in-terminal installed: https://github.com/sebastiencs/icons-in-terminal)
  #source ~/.local/share/icons-in-terminal/icons_bash.sh
  #ICON_bluetooth=$(echo -e $md_bluetooth_searching)
  #ICON_ubuntu=$(echo -e $linux_ubuntu)
  #ICON_webpage=$(echo -e $linea_basic_webpage)
  #ICON_settings=$(echo -e $dev_aptana)
  #ICON_clock=$(echo -e $weather_time_3)
  #ICON_terminal=$(echo -e $file_terminal)
  #ICON_clock2=$(echo -e $md_watch_later)
  #ICON_monitor=$(echo -e $md_personal_video)
  #ICON_graph=$(echo -e $md_broken_image)
  #ICON_chip=$(echo -e $md_developer_board)
  #ICON_folderplus=$(echo -e $md_create_new_folder)
  #ICON_folder=$(echo -e $md_folder)
  #ICON_folderempty=$(echo -e $md_folder_open)
  #ICON_chip2=$(echo -e $fa_microchip)
  #ICON_server=$(echo -e $fa_server)
  #ICON_gradcap=$(echo -e $fa_graduation_cap)
  #ICON_github=$(echo -e $fa_github)
}

variable_declaration
user_customization
